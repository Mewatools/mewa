/**********************************************************
  This file is autogenerated.
  Change font_cpp.template
************************************************************/
#include "mxstaticfont.h"


MxFont::CharDetails MxStaticFont::pCharDetailsList[] =
{
{ 33, 0.164062, 0.40625, 0.00390625, 0.3125, 2, 10, 1, 10, 3.76562 }, 
{ 34, 0.675781, 0.71875, 0.00976562, 0.125, 5, 4, 0, 10, 5.625 }, 
{ 35, 0.169922, 0.03125, 0.0175781, 0.3125, 9, 10, 0, 10, 9.04688 }, 
{ 36, 0.0507812, 0.46875, 0.0136719, 0.375, 7, 12, 0, 11, 7.71875 }, 
{ 37, 0.169922, 0.375, 0.0214844, 0.3125, 11, 10, 0, 10, 11.5469 }, 
{ 38, 0.193359, 0.03125, 0.0195312, 0.3125, 10, 10, 0, 10, 9.82812 }, 
{ 39, 0.693359, 0.03125, 0.00585938, 0.125, 3, 4, 0, 10, 3.17188 }, 
{ 40, 0.0410156, 0.03125, 0.0078125, 0.40625, 4, 13, 0, 10, 4.21875 }, 
{ 41, 0.0410156, 0.46875, 0.0078125, 0.40625, 4, 13, 0, 10, 4.21875 }, 
{ 42, 0.658203, 0.59375, 0.015625, 0.21875, 8, 7, 0, 11, 7.71875 }, 
{ 43, 0.675781, 0.03125, 0.015625, 0.21875, 8, 7, 0, 9, 7.71875 }, 
{ 44, 0.693359, 0.1875, 0.00585938, 0.125, 3, 4, 0, 2, 3.5 }, 
{ 45, 0.693359, 0.59375, 0.0078125, 0.0625, 4, 2, 0, 5, 4.5 }, 
{ 46, 0.693359, 0.6875, 0.00390625, 0.0625, 2, 2, 1, 2, 3.75 }, 
{ 47, 0.193359, 0.375, 0.0117188, 0.3125, 6, 10, 0, 10, 5.21875 }, 
{ 48, 0.214844, 0.03125, 0.015625, 0.3125, 8, 10, 0, 10, 7.71875 }, 
{ 49, 0.214844, 0.375, 0.0078125, 0.3125, 4, 10, 1, 10, 7.71875 }, 
{ 50, 0.232422, 0.03125, 0.0136719, 0.3125, 7, 10, 0, 10, 7.71875 }, 
{ 51, 0.232422, 0.375, 0.0136719, 0.3125, 7, 10, 0, 10, 7.71875 }, 
{ 52, 0.248047, 0.03125, 0.015625, 0.3125, 8, 10, 0, 10, 7.71875 }, 
{ 53, 0.248047, 0.375, 0.0136719, 0.3125, 7, 10, 0, 10, 7.71875 }, 
{ 54, 0.265625, 0.03125, 0.015625, 0.3125, 8, 10, 0, 10, 7.71875 }, 
{ 55, 0.265625, 0.375, 0.015625, 0.3125, 8, 10, 0, 10, 7.71875 }, 
{ 56, 0.283203, 0.03125, 0.0136719, 0.3125, 7, 10, 0, 10, 7.71875 }, 
{ 57, 0.283203, 0.375, 0.015625, 0.3125, 8, 10, 0, 10, 7.71875 }, 
{ 58, 0.558594, 0.375, 0.00390625, 0.25, 2, 8, 1, 8, 3.75 }, 
{ 59, 0.300781, 0.03125, 0.00585938, 0.3125, 3, 10, 0, 8, 3.75 }, 
{ 60, 0.558594, 0.65625, 0.015625, 0.25, 8, 8, 0, 9, 7.71875 }, 
{ 61, 0.675781, 0.53125, 0.015625, 0.15625, 8, 5, 0, 7, 7.71875 }, 
{ 62, 0.576172, 0.03125, 0.015625, 0.25, 8, 8, 0, 9, 7.71875 }, 
{ 63, 0.300781, 0.375, 0.0117188, 0.3125, 6, 10, 0, 10, 5.96875 }, 
{ 64, 0.0722656, 0.03125, 0.0234375, 0.375, 12, 12, 0, 10, 12.125 }, 
{ 65, 0.314453, 0.03125, 0.0175781, 0.3125, 9, 10, 0, 10, 8.51562 }, 
{ 66, 0.314453, 0.375, 0.0136719, 0.3125, 7, 10, 1, 10, 8.70312 }, 
{ 67, 0.333984, 0.03125, 0.0175781, 0.3125, 9, 10, 0, 10, 8.4375 }, 
{ 68, 0.333984, 0.375, 0.015625, 0.3125, 8, 10, 1, 10, 9.57812 }, 
{ 69, 0.353516, 0.03125, 0.0117188, 0.3125, 6, 10, 1, 10, 7.39062 }, 
{ 70, 0.353516, 0.375, 0.0117188, 0.3125, 6, 10, 1, 10, 6.875 }, 
{ 71, 0.367188, 0.03125, 0.0175781, 0.3125, 9, 10, 0, 10, 9.65625 }, 
{ 72, 0.367188, 0.375, 0.015625, 0.3125, 8, 10, 1, 10, 9.8125 }, 
{ 73, 0.386719, 0.03125, 0.00976562, 0.3125, 5, 10, 0, 10, 4.75 }, 
{ 74, 0.0078125, 0.03125, 0.00976562, 0.4375, 5, 14, -2, 10, 3.79688 }, 
{ 75, 0.386719, 0.375, 0.015625, 0.3125, 8, 10, 1, 10, 8.10938 }, 
{ 76, 0.404297, 0.03125, 0.0117188, 0.3125, 6, 10, 1, 10, 6.875 }, 
{ 77, 0.404297, 0.375, 0.0195312, 0.3125, 10, 10, 1, 10, 12.1875 }, 
{ 78, 0.425781, 0.03125, 0.015625, 0.3125, 8, 10, 1, 10, 10.2031 }, 
{ 79, 0.425781, 0.375, 0.0195312, 0.3125, 10, 10, 0, 10, 10.3906 }, 
{ 80, 0.447266, 0.03125, 0.0136719, 0.3125, 7, 10, 1, 10, 8.0625 }, 
{ 81, 0.0507812, 0.03125, 0.0195312, 0.40625, 10, 13, 0, 10, 10.375 }, 
{ 82, 0.447266, 0.375, 0.015625, 0.3125, 8, 10, 1, 10, 8.26562 }, 
{ 83, 0.464844, 0.03125, 0.0136719, 0.3125, 7, 10, 0, 10, 7.26562 }, 
{ 84, 0.464844, 0.375, 0.015625, 0.3125, 8, 10, 0, 10, 7.26562 }, 
{ 85, 0.482422, 0.03125, 0.015625, 0.3125, 8, 10, 1, 10, 9.78125 }, 
{ 86, 0.482422, 0.375, 0.015625, 0.3125, 8, 10, 0, 10, 7.95312 }, 
{ 87, 0.5, 0.03125, 0.0253906, 0.3125, 13, 10, 0, 10, 12.375 }, 
{ 88, 0.5, 0.375, 0.015625, 0.3125, 8, 10, 0, 10, 7.65625 }, 
{ 89, 0.527344, 0.03125, 0.015625, 0.3125, 8, 10, 0, 10, 7.375 }, 
{ 90, 0.527344, 0.375, 0.0136719, 0.3125, 7, 10, 0, 10, 7.54688 }, 
{ 91, 0.0078125, 0.5, 0.00585938, 0.4375, 3, 14, 1, 10, 4.25 }, 
{ 92, 0.544922, 0.03125, 0.0117188, 0.3125, 6, 10, 0, 10, 5.21875 }, 
{ 93, 0.0195312, 0.03125, 0.0078125, 0.4375, 4, 14, 0, 10, 4.25 }, 
{ 94, 0.675781, 0.28125, 0.015625, 0.21875, 8, 7, 0, 10, 7.45312 }, 
{ 95, 0.693359, 0.78125, 0.0136719, 0.0625, 7, 2, -1, -1, 5.75 }, 
{ 96, 0.693359, 0.34375, 0.0078125, 0.09375, 4, 3, 2, 11, 8.07812 }, 
{ 97, 0.576172, 0.3125, 0.0136719, 0.25, 7, 8, 0, 8, 7.4375 }, 
{ 98, 0.115234, 0.4375, 0.0136719, 0.34375, 7, 11, 1, 11, 8.20312 }, 
{ 99, 0.576172, 0.59375, 0.0117188, 0.25, 6, 8, 0, 8, 6.48438 }, 
{ 100, 0.130859, 0.03125, 0.015625, 0.34375, 8, 11, 0, 11, 8.20312 }, 
{ 101, 0.59375, 0.03125, 0.0136719, 0.25, 7, 8, 0, 8, 7.5 }, 
{ 102, 0.130859, 0.40625, 0.0117188, 0.34375, 6, 11, 0, 11, 4.60938 }, 
{ 103, 0.0722656, 0.4375, 0.0136719, 0.375, 7, 12, 0, 8, 7.25 }, 
{ 104, 0.148438, 0.03125, 0.0136719, 0.34375, 7, 11, 1, 11, 8.25 }, 
{ 105, 0.544922, 0.375, 0.00390625, 0.3125, 2, 10, 1, 10, 3.625 }, 
{ 106, 0.0195312, 0.5, 0.0078125, 0.4375, 4, 14, -1, 10, 3.625 }, 
{ 107, 0.148438, 0.40625, 0.0117188, 0.34375, 6, 11, 1, 11, 6.95312 }, 
{ 108, 0.164062, 0.03125, 0.00390625, 0.34375, 2, 11, 1, 11, 3.625 }, 
{ 109, 0.59375, 0.3125, 0.0214844, 0.25, 11, 8, 1, 8, 12.5469 }, 
{ 110, 0.59375, 0.59375, 0.0136719, 0.25, 7, 8, 1, 8, 8.25 }, 
{ 111, 0.617188, 0.03125, 0.015625, 0.25, 8, 8, 0, 8, 8.07812 }, 
{ 112, 0.0976562, 0.03125, 0.0136719, 0.375, 7, 12, 1, 8, 8.20312 }, 
{ 113, 0.0976562, 0.4375, 0.015625, 0.375, 8, 12, 0, 8, 8.20312 }, 
{ 114, 0.617188, 0.3125, 0.00976562, 0.25, 5, 8, 1, 8, 5.57812 }, 
{ 115, 0.617188, 0.59375, 0.0117188, 0.25, 6, 8, 0, 8, 6.3125 }, 
{ 116, 0.558594, 0.03125, 0.00976562, 0.3125, 5, 10, 0, 10, 4.75 }, 
{ 117, 0.634766, 0.03125, 0.0136719, 0.25, 7, 8, 1, 8, 8.25 }, 
{ 118, 0.634766, 0.3125, 0.0136719, 0.25, 7, 8, 0, 8, 6.70312 }, 
{ 119, 0.634766, 0.59375, 0.0214844, 0.25, 11, 8, 0, 8, 10.4531 }, 
{ 120, 0.658203, 0.03125, 0.0136719, 0.25, 7, 8, 0, 8, 7 }, 
{ 121, 0.115234, 0.03125, 0.0136719, 0.375, 7, 12, 0, 8, 6.84375 }, 
{ 122, 0.658203, 0.3125, 0.0117188, 0.25, 6, 8, 0, 8, 6.17188 }, 
{ 123, 0.0292969, 0.03125, 0.00976562, 0.4375, 5, 14, 0, 10, 4.95312 }, 
{ 124, 0.00195312, 0.03125, 0.00390625, 0.46875, 2, 15, 3, 11, 7.71875 }, 
{ 125, 0.0292969, 0.5, 0.00976562, 0.4375, 5, 14, 0, 10, 4.95312 }, 
{ 126, 0.693359, 0.46875, 0.015625, 0.09375, 8, 3, 0, 6, 7.71875 }, 

};


float MxStaticFont::metric( MxFont::MetricName name ) const
{
    static float info_[] =
    {
        16, 13, -4, 3.64062, -2, 1

    };

    return info_[name];
}



const MxFont::CharDetails& MxStaticFont::charDetails(const char32_t character ) const
{
    if( character <= 126 && character >= 33 )
    {
        return pCharDetailsList[character - 33];
    }

    qDebug("ERROR: unicode %d not in font", character);
    return pCharDetailsList['?' - 33];
}

int MxStaticFont::width( const char *str, int size ) const
{
    float strWidth = 0;
    const float wordSpacing = metric(SpaceAdvance);

    int i = 0;
    while( i < size )
    {
        if(*str == ' ')
        {
            strWidth += wordSpacing;
        }
        else
        {
            const MxFont::CharDetails &detail = charDetails(*str);
            strWidth += detail.xAdvance;
        }
        ++str;
        ++i;
    }
    return strWidth;
}

int MxStaticFont::width( const MxString &str ) const
{
    Q_ASSERT( ! str.isNull() );

    const char32_t *ptr = str.data();
    float stringWidth = 0.0f;
    int count = str.size();
    for(int i=0; i < count; ++i)
    {

        if(*ptr == ' ')
        {
            stringWidth += metric(SpaceAdvance);
        }
        else
        {
            const MxFont::CharDetails &detail = charDetails(*ptr);
            stringWidth += detail.xAdvance;
        }
        ++ptr;
    }
    return stringWidth;
}
